- list: unwritable_files
  items: [/etc/shadows,/etc/sudoers,/etc/pam.conf,/tmp/d.txt]
  rulename: Write sensitive files
- list: undelete_files
  items: [/tmp/test_del1.txt,/tmp/test_del2.txt,/tmp/d.txt,/tmp/test,/tmp/test11/t]
  rulename: Delete important files
- list: unread_files
  items: [/tmp/test_read1.txt,/tmp/test_read2.txt,/tmp/d.txt]
  rulename: Read sensitive files
- list: unrename_files
  items: [/tmp/d.txt,/tmp/d1.txt,/tmp/d11.txt]
  rulename: Rename sensitive files
- list: uncreated_dirs
  items: [/var/local/,/tmp/test,123,1123]
  rulename: Created file blew key directorys
- list: unlogin_containers
  items: [deepdefense-scanner,nginx,deepdefense-monitor,deepdefense]
  rulename: Login user containers
- list: user_container_ports
  items: [4002,5001,8011]
  rulename: Establish connection with untrusted port
- list: user_trusted_shells
  items: [ls,bash,sh,date,ps]
  rulename: Used untrusted shells in container
- list: user_soft_mgmts
  items: [apt,apt-get,git,wget]
  rulename: Used software management tools in container
- list: db_type
  items: [mysql,postgresql,sql]
  rulename: Default_rule
- list: db_command
  items: [mysqld,postgres,sqlplus]
  rulename: Default_rule
- rule: Write sensitive files
  desc: an attempt to write to unwritable files
  condition: (fd.name in (unwritable_files) or (sensitive_files))  and (open_write or evt.arg.flags contains O_WRONLY or proc.cmdline contains "sed -i")
  output: Unwritable files opened for writing (containerid=%container.id container=%container.name user=%user.name command=%proc.cmdline file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2] args=%evt.args type=%evt.type )
  priority: ALERT
  tags: [filesystem]
- rule: Read sensitive files
  desc: an attempt to read to sensitive files
  condition: fd.name in (unread_files) and (open_read or evt.arg.flags contains O_RDONLY) and proc_name_exists
  output: Unwritable files opened for read (read=%evt.is_open_read type=%evt.type write=%evt.is_open_write filename=%fd.filename user=%user.namecontainerid=%container.id container=%container.name  command=%proc.cmdline parent=%proc.pname pcmdline=%proc.pcmdline file=%fd.name program=%proc.name gparent=%proc.aname[2] ggparent=%proc.aname[3] gggparent=%proc.aname[4] args=%evt.args type=%evt.type)
  priority: WARNING
  tags: [filesystem]
- rule: Created file blew key directorys
  desc: an attempt to create a file below a set of key directories.
  condition: fd.directory in (uncreated_dirs) and (evt.type = creat or (evt.type = open and evt.arg.flags contains O_CREAT)) and ( evt.arg.mode="0666" or evt.arg.mode="0755" )
  output: Created a new file  below key directorys (user=%user.name command=%proc.cmdline directory=%evt.arg.path arg0=%evt.arg[0] arg1=%evt.arg[1] args=%evt.args containerid=%container.id container=%container.name user=%user.name command=%proc.cmdline file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2] dirs=%fd.directory flags=%evt.arg.flags type1=%evt.type mode=%evt.arg.mode)
  priority: ERROR
  tags: [filesystem]
- rule: Delete sensitive files
  desc: an attempt to delete sensitive files
  condition: evt.arg.name in (undelete_files) and remove
  output: Delete sensitive files(containerid=%container.id container=%container.name user=%user.name command=%proc.cmdline file=%evt.arg.name parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2] args=%evt.args type=%evt.type)
  priority: EMERGENCY
  tags: [filesystem]
- rule: Rename sensitive files
  desc: an attempt to rename sensitive files
  condition: evt.arg.oldpath in (unrename_files) and rename
  output: Rename sensitive files(containerid=%container.id container=%container.name user=%user.name command=%proc.cmdline parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2] args=%evt.args type=%evt.type )
  priority: EMERGENCY
  tags: [filesystem]
- rule: Login user containers
  desc: an attempt to login user containers
  condition: container.name in (unlogin_containers) and evt.type=execve
  output: Login user containers(containerid=%container.id container=%container.name user=%user.name command=%proc.cmdline parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2] args=%evt.args type=%evt.type vpid=%proc.vpid)
  priority: CRITICAL
  tags: [container]
- rule: Establish connection with untrusted port
  desc: an attempt to establish connection with untrusted port
  condition: fd.port in (user_container_ports) and evt.type=connect
  output: Establish connection with untrusted port(containerid=%container.id container=%container.name user=%user.name command=%proc.cmdline parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2] args=%evt.args type=%evt.type )
  priority: ALERT
  tags: [network]
- rule: Used untrusted shells in container
  desc: an attempt to login user containers
  condition: not proc.name in (user_trusted_shells) and evt.type=execve and container
  output: Used untrusted shells in container(containerid=%container.id container=%container.name user=%user.name command=%proc.cmdline parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2] args=%evt.args type=%evt.type )
  priority: ERROR
  tags: [process]
- rule: Used software management tools in container
  desc: an attempt to login user containers
  condition: proc.name in (user_soft_mgmts) and container.id != host
  output: Used software management tools in container(containerid=%container.id container=%container.name user=%user.name command=%proc.cmdline parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2] args=%evt.args type=%evt.type )
  priority: EMERGENCY
  tags: [process]
- rule: The root user changed in a container
  desc: An user changed in a container
  condition: container.id != host and proc.name = su and proc.cmdline contains "root"
  output: Sudo run in container (containerid=%container.id container=%container.name user=%user.name command=%proc.cmdline user=%user.name  parent=%proc.pname cmdline=%proc.cmdline)
  priority: CRITICAL
  tags: [users,container]
- rule: The user changed in a container
  desc: user interface in a container
  condition: container.id != host and proc.name = su
  output: Sudo run in container (containerid=%container.id container=%container.name user=%user.name command=%proc.cmdline user=%user.name parent=%proc.pname cmdline=%proc.cmdline)
  priority: ERROR
  tags: [users,container]
- rule: The user spawned process
  desc: user spawned a new process other than itself.
  condition: spawned_process and container.id != host
  output: user spawned process other than itself (containerid=%container.id container=%container.name user=%user.name command=%proc.cmdline user=%user.name program=%proc.cmdline parent=%proc.pname)
  priority: CRITICAL
  tags: ["
- rule: DB connect process
  desc: an attempt to connect DB process
  condition: proc.pname in (db_command) or proc.cmdline contains "mysql" and proc.cmdline contains "-u" and container.id != host and container.name =  iu
  output: Database-related program attempt to connect DB (containerid=%container.id container=%container.name user=%user.name command=%proc.cmdline user=%user.name program=%proc.cmdline parent=%proc.pname)
  priority: NOTICE
  tags: [process,databasei]
- rule: DB command
  desc: DB command used in container
  condition: proc.pname in (db_command) or proc.cmdline contains "mysql" and container.id != host
  output: DB command used in container (containerid=%container.id container=%container.name user=%user.name command=%proc.cmdline user=%user.name program=%proc.cmdline parent=%proc.pname)
  priority: NOTICE
  tags: [process,databasei]
- rule: Attempt SSH Connection
  desc: Detect any new ssh connection to a host other than those in an allowed group of hosts
  condition: proc.pname in (ssh_binaries) and evt.type=ioctl and  container.id = "iu"
  output: Disallowed SSH Connection (containerid=%container.id container=%container.name user=%user.name parent=%proc.pname pcmdline=%proc.pcmdline connection=%fd.name)
  priority: NOTICE
  tags: [network,mitre_remote_service]
